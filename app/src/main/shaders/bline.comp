#version 450

struct ioInfo
{
    vec4 point;
    vec4 color;
};

struct cmdInfo{
    uint vetCont;
    uint insCont;
    uint vetOff;
    uint insOff;
};

layout(binding = 0) readonly buffer inPos { ioInfo ininfo[]; };

layout(binding = 1) writeonly buffer outPos { ioInfo outinfo[]; };

layout(binding = 2) writeonly buffer outCmd { cmdInfo cmdinfo[]; };


layout (local_size_x_id = 233) in;
layout (local_size_y_id = 234) in;
layout (local_size_z_id = 235) in;

//layout (constant_id = 1) const uint pNum = 3;


void main()
{
    //float t = 1.0 * gl_LocalIn
    float t = 1.0 * gl_WorkGroupID.x/ gl_NumWorkGroups.x;
    vec4 pm = mix(ininfo[1].point, ininfo[2].point, t);
    outinfo[gl_WorkGroupID.x].point = mix(mix(mix(ininfo[0].point, ininfo[1].point, t), pm, t), mix(pm, mix(ininfo[2].point, ininfo[3].point, t), t), t);
    //outinfo[gl_WorkGroupID.x].point = vec4(1.0 ,10.0,1.0,10.0);
    vec4 pmc = mix(ininfo[1].color, ininfo[2].color, t);
    outinfo[gl_WorkGroupID.x].color = mix(mix(mix(ininfo[0].color, ininfo[1].color, t), pmc, t), mix(pmc, mix(ininfo[2].color, ininfo[3].color, t), t), t);
    if(gl_WorkGroupID.x == 0){
        cmdinfo[0].vetCont=gl_NumWorkGroups.x;
        cmdinfo[0].insCont=1;
        cmdinfo[0].vetOff=0;
        cmdinfo[0].insOff=0;
    }
}

